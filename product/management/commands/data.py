from colorama import Fore
from django.core.management import BaseCommand

from product.models import Product, Category, Subcategory


class Command(BaseCommand):

    def create_category(self):
        '''Создать Категории'''

        category = ['Овощи, фрукты, орехи', 'Хлеб, хлебцы, выпечка', 'Молоко, сыр, яйца, растительные продукты',
                    'Макароны, крупы, мука', 'Вода, соки, напитки', 'Чипсы, снеки, сухофрукты', 'Мясо, птица',
                    'Рыба, морепродукты, икра', 'Колбасы, сосиски, деликатесы', 'Чай, кофе, какао', 'Сладости',
                    'Замороженные продукты', 'Растительные масла, специи, соусы', 'Консервы, соленья, варенье',
                    'Детские товары', 'Канцтовары, книги, творчество', 'Товары для животных', 'Косметика, гигиена',
                    'Бытовая химия, уборка', 'Товары для дома', 'Кухня', 'Выгодные предложения Фикспрайс', ]
        dict_category = {index + 1: {'title': data, 'img': f'category/{index + 1}.png', } for index, data in
                         enumerate(category)}
        for row in dict_category:
            title = dict_category[row]['title']
            if Category.objects.filter(title=title):
                print(f'Категория  "{Fore.RED}{title}{Fore.RESET}" уже существует!')
            else:
                product = Category.objects.create(**dict_category[row])
                product.save()
                print(f'Категория {Fore.GREEN}{title}{Fore.RESET} создан!')

    def create_subcategory(self):
        '''Создать Подкатегории'''
        subcategory = [
            {1: ['Овощи', 'Фрукты', 'Зелень, салаты', 'Ягоды', 'Грибы', 'Овощные консервы',
                 'Фруктовые, ягодные консервы', 'Замороженные овощи, фрукты', 'Орехи, сухофрукты',
                 'Фрукты, ягоды'],
             2: ['Наша пекарня', 'Хлеб, лаваш, лепешки', 'Хлебцы, тарталетки', 'Круассаны, пироги, выпечка',
                 'Сушки, сухари', 'Пекарня Глобус', 'Хлеб, хлебцы, лаваш', 'Баранки, сушки, сухари',
                 'Пироги, пирожки, выпечка', 'Торты, пирожные', 'Круассаны, пироги, выпечка, тесто', ],
             3: ['Молоко, сливки', 'Кисломолочные продукты', 'Сметана', 'Творог, творожная масса',
                 'Масло сливочное, маргарин', 'Сыры', 'Йогурты, творожки', 'Десерты, сгущенка, сырки',
                 'Мороженое', 'Яйца', 'Майонез', 'Детские молочные продукты', 'Растительные продукты',
                 'Сгущённое молоко, сгущёнка', 'Молочные коктейли, напитки', 'Село Зелёное',
                 'Пасха с «Село Зелёное»', 'Новинки от Простоквашино', 'Чудо-выгода',
                 'Выгодные цены на «Домик в деревне»', '200 ₽ на любимые продукты',
                 'Полезные биойогурты «Актибио»', ],
             4: ['Макароны, паста', 'Крупы, бобовые', 'Сахар, соль', 'Хлопья, мюсли, отруби',
                 'Продукты быстрого приготовления', 'Мука', 'Для выпечки, десертов, напитков', 'Макароны',
                 'Мука, ингредиенты для выпечки', 'Отруби, клетчатка', 'Хлопья, мюсли, сухие завтраки',
                 'Сахар, сахарозаменитель', 'Соль', ],
             5: ['Вода', 'Соки, нектары', 'Морсы, кисели, компоты', 'Газированные напитки', 'Квас',
                 'Холодный чай', 'Детская вода, напитки', 'Растительные напитки', 'Энергетические напитки',
                 'Безалкогольное пиво, вино', 'Напитки без сахара', 'Вода «Святой Источник»',
                 'Напитки из Черноголовки', '«Святой Источник» — летние хиты', 'Прохлада со вкусом RICH', ],
             6: ['Чипсы', 'Сухарики, гренки', 'Кукурузные палочки, попкорн', 'Хлебцы, крекер', 'Батончики',
                 'Сухофрукты, овощные снеки', 'Орехи, семечки', 'Сушеная рыба, кальмары', 'Мясные снеки',
                 'Чипсы и соломка Lorenz', ],
             7: ['Птица', 'Мясо', 'Фарш, полуфабрикаты', 'Субпродукты', 'Стейки', 'Мраморная говядина',
                 'Пельмени, манты', 'Консервы из мяса', 'Шашлык, гриль', 'Растительное мясо',
                 'Мясной цех Глобус', 'Для запекания', 'Собственное производство', 'Диетическое мясо',
                 'Шашлык, купаты', 'Для супа', 'Для тушения', 'Популярные бренды',
                 'Продукты для гриля и барбекю', ],
             8: ['Рыба', 'Морепродукты', 'Соленая, копченая рыба', 'Икра', 'Крабовые палочки, мясо',
                 'Закуски из рыбы, морепродуктов', 'Консервы из рыбы', 'Сушеная рыба, кальмары',
                 'Дары моря со всего света', 'Рыбный цех Глобус', ],
             9: ['Колбасы', 'Сосиски, сардельки', 'Деликатесы, ветчина', 'Паштеты, холодцы', 'Вязанка',
                 'Собственное производство', 'Мясной цех Глобус', 'Колбасы, ветчины',
                 'Деликатесы, паштеты, заливное', 'Мясные снеки', 'Мясные консервы', ],
             10: ['Чай', 'Кофе, цикорий', 'Какао, шоколад', 'Сиропы, топпинги', 'Nescafe',
                  'Кофейные коктейли', ],
             11: ['Конфеты', 'Шоколад', 'Печенье, пряники, сушки', 'Выпечка, пироги, кексы',
                  'Торты, пирожные', 'Мармелад, зефир, халва', 'Снеки, сухофрукты в глазури',
                  'Мед, варенье, сиропы', 'Жевательная резинка', 'Мороженое', 'Освежитесь с Orbit',
                  'Кондитерская Глобус', 'Сладости к Пасхе', '«Юбилейное» со скидкой',
                  'Встречаем лето со сладостями', 'Сладости для вкусного лета', 'Шоколад, батончики',
                  'День шоколада', 'Печенье, пряники, вафли', ],
             12: ['Пельмени, вареники', 'Наггетсы, котлеты, мясо', 'Блины, оладьи, сырники', 'Пицца, основа',
                  'Супы, вторые блюда', 'Хлеб, выпечка, тесто', 'Овощи, смеси, грибы', 'Фрукты, ягоды',
                  'Мороженое, сладости', 'Горячая штучка', 'Мороженое', 'Рыба, морепродукты',
                  'Рыба, креветки, палочки', ],
             13: ['Соусы, заправки', 'Растительные масла', 'Специи, панировка, сухие бульоны',
                  'Томатная паста, кетчуп', 'Горчица, хрен, аджика', 'Майонез', 'Маринады, уксус',
                  'Сахар, соль', 'Сахар', 'Соль', 'Специи, приправы', 'Кетчуп, томатная паста',
                  'Уксусы, маринады', 'Соусы, горчица', '«Слобода». Соусы для мяса и птицы', ],
             14: ['Овощные консервы, грибы', 'Кукуруза, горошек, фасоль', 'Оливки, маслины, каперсы',
                  'Мясные консервы', 'Консервированные фрукты, компоты', 'Варенья, джемы, конфитюры',
                  'Для любимых салатов', 'Готовые консервированные блюда', 'Рыбные консервы', ],
             15: ['Подгузники, пелёнки', 'Гигиена, уход', 'Игрушки, школа, творчество', 'Питание',
                  'Забота о ребенке', 'Игры, игрушки', 'Товары для творчества',
                  'Кормление, сопутствующие товары', 'Косметика, уход за ребенком', 'Игрушки, игры',
                  'Безопасность, прочие товары', 'Безопасность ребенка', '«ФрутоНяня»', ],
             16: ['Письменные принадлежности', 'Газеты, журналы', 'Тетради, альбомы, бумага', 'Книги',
                  'Офисная канцелярия', 'Организация, хранение', 'Рисование', 'Творчество, игры, рукоделие',
                  'Упаковка, открытки, сувениры', 'Канцтовары', 'Бумага, тетради, блокноты',
                  'Офисные принадлежности', 'Подготовка к экзаменам', 'Товары для школы', ],
             17: ['Корма для кошек', 'Корма для собак', 'Наполнители, пелёнки, лотки',
                  'Любимые корма и лакомства', 'Вкусный и разнообразный корм', 'Корма для других питомцев',
                  'Уход, здоровье', 'Аксессуары, игрушки', 'Корма, лакомства', 'Уход, аксессуары',
                  'Наполнители, пеленки, лотки', 'Корм для кошек на любой вкус',
                  'Комплексная забота о здоровье питомца', 'Разнообразный корм для кошек', ],
             18: ['Мыло', 'Макияж', 'Наборы', 'Личная гигиена, здоровье', 'Уход за телом', 'Уход за лицом',
                  'Уход за волосами', 'Уход за полостью рта', 'Бритье, депиляция', 'Макияж, аксессуары',
                  'Парфюмерия', "Уход за волосами от L'Oreal", 'Уход за волосами от Garnier',
                  'Бритвы со скидками до 35%', 'Бьюти-комбо от Gliss Kur, Taft, Schauma',
                  'Всё для красоты от любимых брендов', '«Papia» – роскошная мягкость',
                  '25 лет с «Фа», «Шаума», «Палетт», «Тафт»', ],
             19: ['Средства для стирки', 'Кондиционеры, ополаскиватели', 'Отбеливатели, пятновыводители',
                  'Средства для мытья посуды', 'Уход за обувью, одеждой', 'Освежители, ароматизаторы',
                  'Средства от насекомых, грызунов', 'Чистящие, моющие средства', 'Товары для уборки',
                  'Уход за одеждой, обувью', 'Встречаем лето в белом', ],
             20: ['Хозяйственные товары', 'Ремонт', 'Электротовары', 'Текстиль', 'Декор, праздник',
                  'Рукоделие, хобби', 'Товары для ванной', 'Товары для праздника', ],
             21: ['Посуда от проверенных брендов', 'Одноразовая посуда', 'Посуда, которую вы полюбите', ],
             22: ['Сладости, жвачки', 'Чипсы, снеки, семечки', 'Макароны, специи, масла', 'Чай, кофе, сахар',
                  'Вода, напитки', 'Консервы, соленья', 'Хлеб, хлебцы, выпечка', 'Молочные продукты',
                  'Колбасы, паштеты', ],
             }]
        len_subcategory = len(subcategory[0].keys())

        for i in range(1, len_subcategory + 1):
            dict_subcategory = {index + 1: {'title': data, 'category': Category.objects.filter(pk=i)[0]} for index, data
                                in enumerate(subcategory[0][i])}

            for row in dict_subcategory:
                title = dict_subcategory[row]['title']
                category = dict_subcategory[row]['category']

                if Subcategory.objects.filter(title=title, category=category):
                    print(f'Подкатегория  "{Fore.RED}{title}{Fore.RESET}" уже существует!')
                else:
                    product = Subcategory.objects.create(**dict_subcategory[row])
                    product.save()
                    print(f'Подкатегория {Fore.GREEN}{title}{Fore.RESET} создан!')

    def create_product(self):
        '''Создать Продукты'''
        with open('data.txt', 'r', encoding='utf-8') as file:
            rows = file.readlines()
            for r in rows:
                try:
                    product = str(r).replace('\n', '').split('#')
                    title, price, img, subcategory = product

                    dict_product = {
                        'title': title,
                        'price': float(price),
                        'img': img,
                        'subcategory': Subcategory.objects.filter(title=subcategory).first()
                    }

                    title = dict_product['title']
                    if Product.objects.filter(title=title, subcategory=dict_product['subcategory']):
                        print(f'Продукт  "{Fore.RED}{title}{Fore.RESET}" уже существует!')
                    else:
                        product = Product.objects.create(**dict_product)
                        product.save()
                        print(f'Продукт {Fore.GREEN}{title}{Fore.RESET} создан!')

                except Exception as e:
                    print(e)
                    print(dict_product)

    def handle(self, *args, **options):
        self.create_category()
        self.create_subcategory()
        self.create_product()
